/*buildscript {
	ext {
		protobufVersion = '3.23.4'
		protobufPluginVersion = '0.8.18'
		grpcVersion = '1.58.0'
	}
}
*/

plugins {
	id 'java-library'
	id 'com.google.protobuf' version "0.9.4"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "io.grpc:grpc-protobuf:1.62.2"
	implementation "io.grpc:grpc-stub:1.62.2"
	implementation 'io.grpc:grpc-api:1.62.2'
	implementation 'io.grpc:grpc-netty:1.63.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:3.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.0'
	//implementation 'org.springframework.boot:spring-boot-starter-web:3.2.0'
	implementation 'net.devh:grpc-server-spring-boot-starter:3.0.0.RELEASE'
	implementation 'io.github.lognet:grpc-spring-boot-starter:5.1.5'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.2.4'
	implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'
	implementation 'io.grpc:grpc-netty-shaded:1.62.2'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5' // Java 9+ compatibility - Do NOT update to 2.0.0
	compileOnly 'org.projectlombok:lombok:1.18.30'
	runtimeOnly 'com.h2database:h2:2.1.214'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.0'
	testImplementation 'org.mockito:mockito-core:5.11.0'

}

test {
	useJUnitPlatform()
//	sourceSets {
//		main {
//			// ... your main source code here ...
//		}
//		test {
//			java {
//				srcDirs = ['src/test/java'] // Specify your test source directory
//			}
//		}
//	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.19.4"
	}
	//generatedFilesBaseDir = "$projectDir/src/generated"
	clean {
		delete generatedFilesBaseDir
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.62.2"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}

		all().each { task ->
			task.builtins {
				java {
					outputSubDir = 'java'
					// This sets the output directory for the Java files within the "builtins" scope
				}
			}
			task.plugins {
				grpc {
					outputSubDir = 'grpc'
					// This sets the output directory for gRPC-specific code within the "plugins" scope
				}
			}
		}
	}
}

/*
idea {
	module {
		sourceDirs += file("src/generated/main/java")
		sourceDirs += file("src/generated/main/grpc")
		generatedSourceDirs += file("src/generated/main/java")
		generatedSourceDirs += file("src/generated/main/grpc")
	}
}*/